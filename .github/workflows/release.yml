name: 🚀 Thock Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: 🔨 Build, Release & Bump Homebrew
    runs-on: macos-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🛠️ Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: 📦 Build Archive
        run: |
          mkdir -p build
          xcodebuild -scheme Thock -configuration Release \
            -archivePath build/Thock.xcarchive archive \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          cp -R build/Thock.xcarchive/Products/Applications/Thock.app build/Thock.app

      - name: ➕ Add CLI
        run: cp cli/thock-cli build/thock-cli
        
      - name: 🧹 Clean quarantine attributes
        run: |
          xattr -cr build/Thock.app
          xattr -cr build/thock-cli

      - name: 🖋️ Ad-hoc sign the app
        run: codesign --force --deep --sign - build/Thock.app

      - name: 🔍 Verify quarantine removal and signature
        run: |
          echo "Checking for quarantine attributes..."

          if xattr -p com.apple.quarantine build/Thock.app; then
            echo "Error: Thock.app still has quarantine attribute!" >&2
          exit 1
          else
            echo "✅ Thock.app is clean."
          fi

          if xattr -p com.apple.quarantine build/thock-cli; then
            echo "Error: thock-cli still has quarantine attribute!" >&2
            exit 1
          else
            echo "✅ thock-cli is clean."
          fi

          echo "Checking ad-hoc code signature..."

          if codesign --verify --deep --strict build/Thock.app; then
            echo "✅ Thock.app signature is valid."
          else
            echo "Error: Thock.app signature verification failed!" >&2
            exit 1
          fi

      - name: 🏷️ Zip with version
        run: |
          cd build
          ZIP_NAME="Thock-${{ github.ref_name }}.zip"
          zip -r "$ZIP_NAME" Thock.app thock-cli
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: 🧮 Get SHA256
        id: sha
        run: |
          HASH=$(shasum -a 256 "build/$ZIP_NAME" | awk '{ print $1 }')
          echo "sha=$HASH" >> $GITHUB_OUTPUT

      - name: 🚀 Upload release artifact
        uses: softprops/action-gh-release@v1
        with:
          files: build/${{ env.ZIP_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧪 Update Homebrew tap
        env:
          GH_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}
        run: |
          git config --global user.email "release-bot@thock.dev"
          git config --global user.name "Thock Release Bot"
          
          git clone https://${GH_TOKEN}@github.com/kamillobinski/homebrew-thock.git
          cd homebrew-thock
          git checkout -b bump-${{ env.VERSION }}
          
          sed -i '' "s|url \".*\"|url \"https://github.com/kamillobinski/thock/releases/download/${{ env.VERSION }}/${{ env.ZIP_NAME }}\"|" thock.rb
          sed -i '' "s|sha256 \".*\"|sha256 \"${{ steps.sha.outputs.sha }}\"|" thock.rb
          sed -i '' "s|version \".*\"|version \"${{ env.VERSION }}\"|" thock.rb
          
          git add thock.rb
          git commit -m "chore: update to ${{ env.VERSION }}"
          git push origin bump-${{ env.VERSION }}
          gh pr create --title "chore: update to ${{ env.VERSION }}" --body "Automated Thock release bump." --head bump-${{ env.VERSION }}
